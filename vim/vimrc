"Nitish
":map
":help quickref

"-------
"allow backspacing over everything in insert mode
set backspace=indent,eol,start
"no compatibility
set nocompatible
"-------

"Vundle
"-------
filetype off
set rtp+=$HOME/.vim/bundle/Vundle.vim
call vundle#begin('$HOME/.vim/bundle')

"Vundle - required
Plugin 'VundleVim/Vundle.vim'

Plugin 'scrooloose/nerdcommenter'
Plugin 'sjl/gundo.vim'
Plugin 'kien/ctrlp.vim'
Plugin 'vim-airline/vim-airline' "keep
Plugin 'ervandew/supertab' "keep
Plugin 'airblade/vim-gitgutter' "keep
Plugin 'tpope/vim-fugitive' "keep
Plugin 'FelikZ/ctrlp-py-matcher'

"All of your Plugins must be added before the following line
call vundle#end()
filetype plugin indent on


"Colors
"-------
syntax on
colorscheme badwolf
"-------

"*****************************************************************************
"" Basic Setup
"*****************************************************************************"
"" Tabs. May be overriten by autocmd rules
set tabstop=2
set softtabstop=0
set shiftwidth=2
set expandtab

"" Map leader to ,
let mapleader=','

"" Searching
set ignorecase
set smartcase
set incsearch
"highlight matches
set hlsearch
"Ignore case
set ignorecase
"turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

"" Directories for swp files
set noswapfile

"*****************************************************************************
"" Visual Settings
"*****************************************************************************
"Toggle showing line numbers
nmap ~ :set number! number?<cr>

" show linenos
set number
" highlight current line
set cursorline
"show command in bottom bar
set showcmd
"filetype specific indentation
filetype indent on
"highlight matching parentheses
set showmatch
"visual autocomplete
set wildmenu

"*****************************************************************************
"" Miscellaneous
"*****************************************************************************

" forgot to sudo in
cmap w!! w !sudo tee > /dev/null %

" wildmode
set wildmenu
set wildmode=longest:full
set wildignore+=*.a,*.o,*.hi
set wildignore+=*.pdf,*.gz,*.aux,*.out,*.nav,*.snm,*.vrb
set wildignore+=*/tmp/*,*.so,*.swp,*.zip,*.pyc,*.db,*.sqlite

"*****************************************************************************
"" Abbreviations
"*****************************************************************************

"" no one is really happy until you have these shortcuts
cnoreabbrev E e
cnoreabbrev W! w!
cnoreabbrev Q! q!
cnoreabbrev Qall! qall!
cnoreabbrev Wq wq
cnoreabbrev Wa wa
cnoreabbrev wQ wq
cnoreabbrev WQ wq
cnoreabbrev W w
cnoreabbrev Q q
cnoreabbrev Qall qall

"*****************************************************************************
"" Movement
"*****************************************************************************

"move by visual line
nnoremap j gj
nnoremap k gk

"move to beginning/end of line/script
noremap A ^
noremap D $
noremap W gg
noremap S GG
nnoremap ^ <nop>
nnoremap $ <nop>
nnoremap ] %

"buffer switching
map <leader>] :bn<CR>
map <leader>[ :bp<CR>
map <leader>d :bd<CR>

"window management
map <leader>v <C-w>v
map <leader>s <C-w>s
map <leader>h <C-w>h
map <leader>j <C-w>j
map <leader>k <C-w>k
map <leader>l <C-w>l

"disable mouse
set mouse=
"copy to clipboard
vnoremap <C-c> "+y

"*****************************************************************************
"" Mappings
"*****************************************************************************
"" Set working directory
nnoremap <leader>. :lcd %:p:h<CR>

"" Opens an edit command with the path of the currently edited file filled in
noremap <Leader>e :e <C-R>=expand("%:p:h") . "/" <CR>

"" Opens a tab edit command with the path of the currently edited file filled
noremap <Leader>te :tabe <C-R>=expand("%:p:h") . "/" <CR>

"*****************************************************************************
"" Language configs
"*****************************************************************************

" indent
autocmd FileType python,html,javascript,javascript.jsx setlocal tabstop=4 shiftwidth=4 expandtab
autocmd FileType c,cpp,scala,java,ruby setlocal tabstop=2 shiftwidth=2 expandtab

"*****************************************************************************
"" Plugins
"*****************************************************************************
"Comments
"-------
let g:NERDSpaceDelims=1
let g:NERDDefaultAlign='left'
let g:NERDTrimTrailingWhitespace=1
let g:NERDCommentEmptyLines=1
"-------

nnoremap <leader>u :GundoToggle<CR>
"save session
nnoremap <leader>` :mksesssion<CR>

"CtrlP
"-------
let g:ctrlp_show_hidden=1
let g:ctrlp_switch_buffer=0
let g:ctrlp_working_path_mode=0
let g:ctrlp_match_func = { 'match': 'pymatcher#PyMatch' }
"-------

"Airline
"-------
let g:airline#extensions#tabline#enabled = 1

"Fugitive
"-------
set statusline+=%{fugitive#statusline()}
noremap <Leader>gs :Git<CR>
noremap <Leader>gll :Gpull<CR>
noremap <Leader>gb :Git blame<CR>
noremap <Leader>gd :Gvdiff<CR>
noremap <Leader>gh :.GBrowse<CR>
vnoremap <Leader>gh :.GBrowse<CR>

" air-line
let g:airline_powerline_fonts = 1

if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

" airline symbols
let g:airline_left_sep = ''
let g:airline_left_alt_sep = ''
let g:airline_right_sep = ''
let g:airline_right_alt_sep = ''
let g:airline_symbols.branch = ''
let g:airline_symbols.readonly = ''
let g:airline_symbols.linenr = ' ln '
let g:airline_symbols.colnr = ' cn '
